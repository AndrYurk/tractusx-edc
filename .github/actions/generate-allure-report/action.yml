#################################################################################
#  Copyright (c) 2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Generate Allure report"
description: "Generate Allure report for release"
inputs:
  release-name:
    required: true
    description: "Release version for which "
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

    - name: Set up JDK
      uses: ./.github/actions/setup-java

    - name: Cache Gradle dependencies
      uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf #v4.2.2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}

    - name: Run end-to-end-tests
      run: |
        ./gradlew compileJava compileTestJava
        ./gradlew test -DincludeTags="EndToEndTest"

    - name: Checkout gh-pages branch
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      with:
        ref: gh-pages
        path: gh-pages

    - name: Build Allure test report
      uses: simple-elf/allure-report-action@f841fec0e421b5d7d8e807dedfb03efb8cf30303 #v1.12
      with:
        gh_pages: gh-pages
        allure_results: build/allure-results

    - name: Get Release Name
      id: get_release
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
      with:
        script: |
          core.setOutput("release_name", context.payload.release.name);

    - name: Prepare Report Directory
      run: |
        TARGET_FOLDER="gh-pages/reports/${{ steps.get_release.outputs.release_name }}"
        if [ -d "$TARGET_FOLDER" ]; then
            echo "Removing existing report at ${TARGET_DIR}"
            rm -rf "$TARGET_FOLDER"
        fi
        mkdir -p "$TARGET_FOLDER"
        cp -R allure-report/* "$TARGET_FOLDER/"

    - name: Publish Allure test report to gh-pages
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: gh-pages

    - name: Update Release Notes with Allure Report Link
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea #v7.0.1
      with:
        script: |
          const releaseId = context.payload.release.id;
          const repoParts = process.env.GITHUB_REPOSITORY.split('/');
          const repoName = repoParts[1];
          const owner = process.env.GITHUB_REPOSITORY_OWNER;
          const releaseName = encodeURIComponent(context.payload.release.name);
          const reportUrl = `https://${owner}.github.io/${repoName}/reports/${releaseName}/`;
          const { data: release } = await github.rest.repos.getRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: releaseId
          });
          const newBody = release.body + "\n\n**Test Report:** [View Report](" + reportUrl + ")";
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: releaseId,
            body: newBody
          });