"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","5226","When multiple requests to refresh, to different edrs, verify all return non expired token","","Tue Apr 29 09:19:42 GMT 2025","passed","Tue Apr 29 09:19:47 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_subsequentRequestReturn"
"","134","refreshEdr_whenNotAuthorized()","","Tue Apr 29 09:19:47 GMT 2025","passed","Tue Apr 29 09:19:47 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotAuthorized"
"","3997","Contract policy is fulfilled PCF Use Case (legacy notation)","","Tue Apr 29 09:22:55 GMT 2025","passed","Tue Apr 29 09:22:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","543","Verify HTTP 403 response when refreshing the token is not allowed","","Tue Apr 29 09:19:41 GMT 2025","passed","Tue Apr 29 09:19:42 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_unauthorized"
"","3963","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 29 09:22:33 GMT 2025","passed","Tue Apr 29 09:22:37 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","133","Expect the Catalog request to fail if a credential is expired","","Tue Apr 29 09:20:37 GMT 2025","passed","Tue Apr 29 09:20:37 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","40","Policy is accepted In force date policy","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3579","Contract policy is fulfilled MembershipCredential","","Tue Apr 29 09:20:49 GMT 2025","passed","Tue Apr 29 09:20:53 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","10274","Verify the refresh endpoint is not called when auto_refresh=false","","Tue Apr 29 09:19:26 GMT 2025","passed","Tue Apr 29 09:19:36 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","19","Policy is accepted Contract reference","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","4017","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 29 09:21:13 GMT 2025","passed","Tue Apr 29 09:21:17 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","2090","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Tue Apr 29 09:20:45 GMT 2025","passed","Tue Apr 29 09:20:47 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","49584","transferData_privateBackend()","","Tue Apr 29 09:21:43 GMT 2025","passed","Tue Apr 29 09:22:33 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend"
"","27","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2917","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Tue Apr 29 09:22:48 GMT 2025","passed","Tue Apr 29 09:22:51 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","126","Expect the Catalog request to fail if a credential is expired","","Tue Apr 29 09:22:37 GMT 2025","passed","Tue Apr 29 09:22:37 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","5604","transferData_privateBackend()","","Tue Apr 29 09:19:12 GMT 2025","passed","Tue Apr 29 09:19:17 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend"
"","162","refreshEdr_whenNotFound()","","Tue Apr 29 09:19:14 GMT 2025","passed","Tue Apr 29 09:19:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotFound"
"","143","Verify HTTP 200 response and body when refreshing succeeds","","Tue Apr 29 09:19:47 GMT 2025","passed","Tue Apr 29 09:19:47 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_success"
"","254","Consumer gets catalog from the provider. No constraints.","","Tue Apr 29 09:19:16 GMT 2025","passed","Tue Apr 29 09:19:16 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","3873","Contract policy is fulfilled MembershipCredential","","Tue Apr 29 09:22:51 GMT 2025","passed","Tue Apr 29 09:22:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","1886","Verify the refresh endpoint is not called when auto_refresh=false","","Tue Apr 29 09:19:11 GMT 2025","passed","Tue Apr 29 09:19:13 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","197","Verify that the consumer receives only the offers he is permitted to (using the new BPN validation)","","Tue Apr 29 09:19:48 GMT 2025","passed","Tue Apr 29 09:19:48 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpn_shouldReject"
"","121","refreshEdr_whenNotFound()","","Tue Apr 29 09:19:41 GMT 2025","passed","Tue Apr 29 09:19:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotFound"
"","2979","Contract policy is fulfilled Dismantler Credential","","Tue Apr 29 09:23:07 GMT 2025","passed","Tue Apr 29 09:23:10 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","1024","The Authorization header is empty","","Tue Apr 29 09:19:10 GMT 2025","passed","Tue Apr 29 09:19:11 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_emptyAuthHeader"
"","3087","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Tue Apr 29 09:23:16 GMT 2025","passed","Tue Apr 29 09:23:19 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","828","The sign key of the authentication token is different from the public key from the DID","","Tue Apr 29 09:19:14 GMT 2025","passed","Tue Apr 29 09:19:15 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_spoofedAuthToken"
"","13509","Consumer gets cached catalog with provider entry","","Tue Apr 29 09:19:56 GMT 2025","passed","Tue Apr 29 09:20:09 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","23","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","31207","Catalog with 1000 offers","","Tue Apr 29 09:19:16 GMT 2025","passed","Tue Apr 29 09:19:48 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_of1000Assets_shouldContainAll"
"","28","Policy is accepted Dismantler Cred (activity type)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","160","Multiple ContractDefinitions exist for one Asset","","Tue Apr 29 09:19:48 GMT 2025","passed","Tue Apr 29 09:19:48 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_multipleOffersForAsset"
"","4021","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Tue Apr 29 09:21:25 GMT 2025","passed","Tue Apr 29 09:21:29 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","310","Malicious actor should not impersonate a consumer by creating a VP with the consumer membership credential","","Tue Apr 29 09:19:18 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withWrappedConsumerCredential"
"","4011","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Tue Apr 29 09:21:17 GMT 2025","passed","Tue Apr 29 09:21:21 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","19","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","5758","transferData_withSuspendResume()","","Tue Apr 29 09:19:35 GMT 2025","passed","Tue Apr 29 09:19:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withSuspendResume"
"","3984","Contract policy is fulfilled DataExchangeGovernance use case","","Tue Apr 29 09:23:03 GMT 2025","passed","Tue Apr 29 09:23:07 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","130","Verify the refresh endpoint is not called when token not yet expired","","Tue Apr 29 09:19:41 GMT 2025","passed","Tue Apr 29 09:19:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","7989","transferData_withExpiredEdr_shouldReturn4xx()","","Tue Apr 29 09:21:14 GMT 2025","passed","Tue Apr 29 09:21:22 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withExpiredEdr_shouldReturn4xx"
"","3957","Contract policy is fulfilled DataExchangeGovernance use case","","Tue Apr 29 09:21:01 GMT 2025","passed","Tue Apr 29 09:21:05 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","46","Policy is accepted PCF Use Case (legacy notation)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","3007","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 29 09:23:19 GMT 2025","passed","Tue Apr 29 09:23:22 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","29","Policy is accepted DataExchangeGovernance use case","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","576","Verify HTTP 403 response when refreshing the token is not allowed","","Tue Apr 29 09:19:14 GMT 2025","passed","Tue Apr 29 09:19:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_unauthorized"
"","32","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","32","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","24","Policy is accepted Dismantler Credential","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","29","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","878","The refresh token does not match the stored one","","Tue Apr 29 09:19:13 GMT 2025","passed","Tue Apr 29 09:19:14 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_withWrongRefreshToken"
"","27","Policy is accepted Dismantler Cred (activity type)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","1100","The Authorization header is missing","","Tue Apr 29 09:19:09 GMT 2025","passed","Tue Apr 29 09:19:10 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_missingAuthHeader"
"","5334","When multiple requests to refresh, to different edrs, verify all return non expired token","","Tue Apr 29 09:19:14 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_subsequentRequestReturn"
"","2228","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Tue Apr 29 09:19:14 GMT 2025","passed","Tue Apr 29 09:19:16 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_WithNamespace_shouldReject"
"","38","Policy is accepted PCF Use Case (legacy notation)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","14175","transferData_withTerminate()","","Tue Apr 29 09:19:21 GMT 2025","passed","Tue Apr 29 09:19:35 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withTerminate"
"","464","refreshEdr()","","Tue Apr 29 09:19:13 GMT 2025","passed","Tue Apr 29 09:19:13 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr"
"","37224","httpPushDataTransfer()","","Tue Apr 29 09:19:49 GMT 2025","passed","Tue Apr 29 09:20:26 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest$InMemory","httpPushDataTransfer"
"","2886","Contract policy is NOT fulfilled Dismantler activityType does not match","","Tue Apr 29 09:22:41 GMT 2025","passed","Tue Apr 29 09:22:44 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","17","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","4053","Contract policy is fulfilled PCF Use Case (new notation)","","Tue Apr 29 09:20:57 GMT 2025","passed","Tue Apr 29 09:21:01 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","27","Policy is accepted PCF Use Case (new notation)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","872","Refresh token is null or empty (missing) [2] ","","Tue Apr 29 09:19:12 GMT 2025","passed","Tue Apr 29 09:19:13 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","579","Verify HTTP 200 response and body when refreshing succeeds","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_success"
"","44549","shouldTerminateTransfer_whenPolicyExpires()","","Tue Apr 29 09:19:28 GMT 2025","passed","Tue Apr 29 09:20:12 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest$InMemory","shouldTerminateTransfer_whenPolicyExpires"
"","4001","Contract policy is fulfilled PCF Use Case (new notation)","","Tue Apr 29 09:22:59 GMT 2025","passed","Tue Apr 29 09:23:03 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","907","Refresh token success","","Tue Apr 29 09:19:16 GMT 2025","passed","Tue Apr 29 09:19:17 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_success"
"","247","Expect the Catalog request to fail if a credential is revoked","","Tue Apr 29 09:22:37 GMT 2025","passed","Tue Apr 29 09:22:37 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","2697","Malicious actor should not impersonate a consumer sending a valid consumer VP","","Tue Apr 29 09:19:16 GMT 2025","passed","Tue Apr 29 09:19:18 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withConsumerPresentation"
"","28","Policy is accepted Usage Purpose","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3577","The authentication token misses required claims: token","","Tue Apr 29 09:19:05 GMT 2025","passed","Tue Apr 29 09:19:09 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAccessToken"
"","4884","refreshEdr()","","Tue Apr 29 09:19:36 GMT 2025","passed","Tue Apr 29 09:19:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr"
"","271","Expect the Catalog request to fail if a credential is revoked","","Tue Apr 29 09:20:36 GMT 2025","passed","Tue Apr 29 09:20:37 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","29","Policy is accepted Dismantler Credential","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","178","Verify the refresh endpoint is not called when token not yet expired","","Tue Apr 29 09:19:13 GMT 2025","passed","Tue Apr 29 09:19:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","2059","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Tue Apr 29 09:20:37 GMT 2025","passed","Tue Apr 29 09:20:39 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","2004","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Tue Apr 29 09:20:43 GMT 2025","passed","Tue Apr 29 09:20:45 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","2984","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 29 09:23:13 GMT 2025","passed","Tue Apr 29 09:23:16 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4","verifyAgentId_whenNoMembershipCredential(ParticipantAgentService)","","Tue Apr 29 09:21:33 GMT 2025","passed","Tue Apr 29 09:21:33 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyAgentId_whenNoMembershipCredential"
"","2003","Contract policy is NOT fulfilled Dismantler activityType does not match","","Tue Apr 29 09:20:41 GMT 2025","passed","Tue Apr 29 09:20:43 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","3941","Contract policy is fulfilled Dismantler Cred (activity type)","","Tue Apr 29 09:21:09 GMT 2025","passed","Tue Apr 29 09:21:13 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4052","Contract policy is fulfilled Dismantler Credential","","Tue Apr 29 09:21:05 GMT 2025","passed","Tue Apr 29 09:21:09 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","31","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","1","verifyCorrectParticipantAgentId(ParticipantAgentService)","","Tue Apr 29 09:21:33 GMT 2025","passed","Tue Apr 29 09:21:33 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyCorrectParticipantAgentId"
"","3934","Contract policy is fulfilled PCF Use Case (legacy notation)","","Tue Apr 29 09:20:53 GMT 2025","passed","Tue Apr 29 09:20:57 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","1271","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Tue Apr 29 09:22:47 GMT 2025","passed","Tue Apr 29 09:22:48 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","36","Policy is accepted PCF Use Case (new notation)","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","17","Policy is accepted Usage Purpose","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","2983","Contract policy is fulfilled Dismantler Cred (activity type)","","Tue Apr 29 09:23:10 GMT 2025","passed","Tue Apr 29 09:23:13 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","437","Policy is accepted MembershipCredential","","Tue Apr 29 09:19:19 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","40651","transferData_withAutomaticRefresh()","","Tue Apr 29 09:20:33 GMT 2025","passed","Tue Apr 29 09:21:14 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withAutomaticRefresh"
"","867","The authentication token has a invalid id","","Tue Apr 29 09:19:13 GMT 2025","passed","Tue Apr 29 09:19:13 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidTokenId"
"","65555","transferData_privateBackend()","","Tue Apr 29 09:19:27 GMT 2025","passed","Tue Apr 29 09:20:33 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend"
"","2061","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Tue Apr 29 09:20:39 GMT 2025","passed","Tue Apr 29 09:20:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","564","refreshEdr_whenNotAuthorized()","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:21 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotAuthorized"
"","3804","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 29 09:19:17 GMT 2025","passed","Tue Apr 29 09:19:21 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend_withConsumerDataPlane"
"","1238","Policy is accepted MembershipCredential","","Tue Apr 29 09:19:18 GMT 2025","passed","Tue Apr 29 09:19:19 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","42","Policy is accepted DataExchangeGovernance use case","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","200","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Tue Apr 29 09:19:48 GMT 2025","passed","Tue Apr 29 09:19:48 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_shouldReject"
"","920","Refresh token is null or empty (missing) [1] null","","Tue Apr 29 09:19:11 GMT 2025","passed","Tue Apr 29 09:19:12 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","4013","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 29 09:21:21 GMT 2025","passed","Tue Apr 29 09:21:25 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","813","The authentication token misses required claims: audience","","Tue Apr 29 09:19:15 GMT 2025","passed","Tue Apr 29 09:19:16 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAudience"
"","2990","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Tue Apr 29 09:23:22 GMT 2025","passed","Tue Apr 29 09:23:25 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","15423","Verify that the callbacks are invoked when negotiating an EDR","","Tue Apr 29 09:19:55 GMT 2025","passed","Tue Apr 29 09:20:10 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest$InMemory","negotiateEdr_shouldInvokeCallbacks"
"","1908","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Tue Apr 29 09:22:37 GMT 2025","passed","Tue Apr 29 09:22:39 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","3919","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 29 09:20:33 GMT 2025","passed","Tue Apr 29 09:20:36 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","2908","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Tue Apr 29 09:22:44 GMT 2025","passed","Tue Apr 29 09:22:47 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","2021","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Tue Apr 29 09:20:47 GMT 2025","passed","Tue Apr 29 09:20:49 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","1912","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Tue Apr 29 09:22:39 GMT 2025","passed","Tue Apr 29 09:22:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","35","Policy is accepted Contract reference","","Tue Apr 29 09:19:20 GMT 2025","passed","Tue Apr 29 09:19:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
