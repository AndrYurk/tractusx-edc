"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","40","Policy is accepted PCF Use Case (legacy notation)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2018","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Mon Apr 21 20:57:10 GMT 2025","passed","Mon Apr 21 20:57:12 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","28","Policy is accepted PCF Use Case (new notation)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","31048","Catalog with 1000 offers","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:56:14 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_of1000Assets_shouldContainAll"
"","5355","When multiple requests to refresh, to different edrs, verify all return non expired token","","Mon Apr 21 20:55:42 GMT 2025","passed","Mon Apr 21 20:55:47 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_subsequentRequestReturn"
"","3542","Contract policy is fulfilled MembershipCredential","","Mon Apr 21 20:57:12 GMT 2025","passed","Mon Apr 21 20:57:15 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","2041","Contract policy is NOT fulfilled Dismantler activityType does not match","","Mon Apr 21 20:57:04 GMT 2025","passed","Mon Apr 21 20:57:06 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","4101","Contract policy is fulfilled PCF Use Case (new notation)","","Mon Apr 21 20:57:19 GMT 2025","passed","Mon Apr 21 20:57:23 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","6070","transferData_privateBackend()","","Mon Apr 21 20:55:29 GMT 2025","passed","Mon Apr 21 20:55:35 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend"
"","905","Refresh token is null or empty (missing) [1] null","","Mon Apr 21 20:55:25 GMT 2025","passed","Mon Apr 21 20:55:26 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","3017","Contract policy is fulfilled Dismantler Cred (activity type)","","Mon Apr 21 20:59:29 GMT 2025","passed","Mon Apr 21 20:59:32 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","33743","Consumer gets cached catalog with provider entry","","Mon Apr 21 20:56:22 GMT 2025","passed","Mon Apr 21 20:56:56 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","182","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Mon Apr 21 20:56:15 GMT 2025","passed","Mon Apr 21 20:56:15 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_shouldReject"
"","122","refreshEdr_whenNotFound()","","Mon Apr 21 20:56:08 GMT 2025","passed","Mon Apr 21 20:56:08 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotFound"
"","2999","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Mon Apr 21 20:59:32 GMT 2025","passed","Mon Apr 21 20:59:35 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","129","Verify the refresh endpoint is not called when token not yet expired","","Mon Apr 21 20:56:08 GMT 2025","passed","Mon Apr 21 20:56:08 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","33","Policy is accepted Dismantler Credential","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","1091","The Authorization header is missing","","Mon Apr 21 20:55:23 GMT 2025","passed","Mon Apr 21 20:55:24 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_missingAuthHeader"
"","28","Policy is accepted DataExchangeGovernance use case","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","839","The sign key of the authentication token is different from the public key from the DID","","Mon Apr 21 20:55:29 GMT 2025","passed","Mon Apr 21 20:55:30 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_spoofedAuthToken"
"","3882","Contract policy is fulfilled DataExchangeGovernance use case","","Mon Apr 21 20:57:23 GMT 2025","passed","Mon Apr 21 20:57:27 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3002","Contract policy is fulfilled Dismantler Credential","","Mon Apr 21 20:59:26 GMT 2025","passed","Mon Apr 21 20:59:29 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","299","Malicious actor should not impersonate a consumer by creating a VP with the consumer membership credential","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withWrappedConsumerCredential"
"","2889","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Mon Apr 21 20:59:06 GMT 2025","passed","Mon Apr 21 20:59:09 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","30","Policy is accepted Dismantler Cred (activity type)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3151","Contract policy is fulfilled MembershipCredential","","Mon Apr 21 20:59:14 GMT 2025","passed","Mon Apr 21 20:59:17 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","122","Expect the Catalog request to fail if a credential is expired","","Mon Apr 21 20:58:59 GMT 2025","passed","Mon Apr 21 20:58:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","1008","The Authorization header is empty","","Mon Apr 21 20:55:24 GMT 2025","passed","Mon Apr 21 20:55:25 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_emptyAuthHeader"
"","18","Policy is accepted Usage Purpose","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","4036","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Mon Apr 21 20:57:43 GMT 2025","passed","Mon Apr 21 20:57:47 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","30","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3935","Contract policy is fulfilled PCF Use Case (legacy notation)","","Mon Apr 21 20:57:15 GMT 2025","passed","Mon Apr 21 20:57:19 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","6485","Verify all existing TPs related to an agreement are terminated upon its retirement","","Mon Apr 21 20:55:42 GMT 2025","passed","Mon Apr 21 20:55:48 GMT 2025","","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest.InMemory","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest$InMemory","retireAgreement_shouldCloseTransferProcesses"
"","851","The refresh token does not match the stored one","","Mon Apr 21 20:55:28 GMT 2025","passed","Mon Apr 21 20:55:29 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_withWrongRefreshToken"
"","3465","The authentication token misses required claims: token","","Mon Apr 21 20:55:20 GMT 2025","passed","Mon Apr 21 20:55:23 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAccessToken"
"","455","refreshEdr()","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr"
"","28","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2044","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Mon Apr 21 20:57:06 GMT 2025","passed","Mon Apr 21 20:57:08 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","1","verifyCorrectParticipantAgentId(ParticipantAgentService)","","Mon Apr 21 20:57:55 GMT 2025","passed","Mon Apr 21 20:57:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyCorrectParticipantAgentId"
"","919","Refresh token success","","Mon Apr 21 20:55:30 GMT 2025","passed","Mon Apr 21 20:55:31 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_success"
"","844","Refresh token is null or empty (missing) [2] ","","Mon Apr 21 20:55:26 GMT 2025","passed","Mon Apr 21 20:55:27 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","3976","Contract policy is fulfilled Dismantler Cred (activity type)","","Mon Apr 21 20:57:31 GMT 2025","passed","Mon Apr 21 20:57:35 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","19","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","5258","When multiple requests to refresh, to different edrs, verify all return non expired token","","Mon Apr 21 20:56:08 GMT 2025","passed","Mon Apr 21 20:56:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_subsequentRequestReturn"
"","2073","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Mon Apr 21 20:57:01 GMT 2025","passed","Mon Apr 21 20:57:04 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","184","Verify HTTP 403 response when refreshing the token is not allowed","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:42 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_unauthorized"
"","65462","transferData_privateBackend()","","Mon Apr 21 20:55:50 GMT 2025","passed","Mon Apr 21 20:56:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend"
"","871","The authentication token has a invalid id","","Mon Apr 21 20:55:27 GMT 2025","passed","Mon Apr 21 20:55:28 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidTokenId"
"","2998","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Mon Apr 21 20:59:35 GMT 2025","passed","Mon Apr 21 20:59:38 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","23","Policy is accepted Dismantler Credential","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","245","Expect the Catalog request to fail if a credential is revoked","","Mon Apr 21 20:58:59 GMT 2025","passed","Mon Apr 21 20:58:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","458","Policy is accepted MembershipCredential","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2895","Contract policy is NOT fulfilled Dismantler activityType does not match","","Mon Apr 21 20:59:03 GMT 2025","passed","Mon Apr 21 20:59:06 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","157","refreshEdr_whenNotFound()","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotFound"
"","1491","retireAgreement_shouldFail_whenAgreementDoesNotExist()","","Mon Apr 21 20:55:40 GMT 2025","passed","Mon Apr 21 20:55:42 GMT 2025","","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest.InMemory","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest$InMemory","retireAgreement_shouldFail_whenAgreementDoesNotExist"
"","2991","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Mon Apr 21 20:59:41 GMT 2025","passed","Mon Apr 21 20:59:44 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","43442","shouldTerminateTransfer_whenPolicyExpires()","","Mon Apr 21 20:55:52 GMT 2025","passed","Mon Apr 21 20:56:36 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest$InMemory","shouldTerminateTransfer_whenPolicyExpires"
"","32","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","18","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","31","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","4089","Contract policy is fulfilled Dismantler Credential","","Mon Apr 21 20:57:27 GMT 2025","passed","Mon Apr 21 20:57:31 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4038","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Mon Apr 21 20:57:47 GMT 2025","passed","Mon Apr 21 20:57:51 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","18","Policy is accepted Dismantler Cred (activity type)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","595","Verify HTTP 200 response and body when refreshing succeeds","","Mon Apr 21 20:55:47 GMT 2025","passed","Mon Apr 21 20:55:47 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_success"
"","152","Multiple ContractDefinitions exist for one Asset","","Mon Apr 21 20:56:15 GMT 2025","passed","Mon Apr 21 20:56:15 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_multipleOffersForAsset"
"","197","Verify that the consumer receives only the offers he is permitted to (using the new BPN validation)","","Mon Apr 21 20:56:14 GMT 2025","passed","Mon Apr 21 20:56:15 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpn_shouldReject"
"","40577","transferData_withAutomaticRefresh()","","Mon Apr 21 20:56:50 GMT 2025","passed","Mon Apr 21 20:57:30 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withAutomaticRefresh"
"","3389","transferData_privateBackend_withConsumerDataPlane()","","Mon Apr 21 20:55:35 GMT 2025","passed","Mon Apr 21 20:55:38 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend_withConsumerDataPlane"
"","21","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","10277","Verify the refresh endpoint is not called when auto_refresh=false","","Mon Apr 21 20:55:52 GMT 2025","passed","Mon Apr 21 20:56:03 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","30","Policy is accepted Contract reference","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2041","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Mon Apr 21 20:57:08 GMT 2025","passed","Mon Apr 21 20:57:10 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","3028","Contract policy is fulfilled PCF Use Case (legacy notation)","","Mon Apr 21 20:59:17 GMT 2025","passed","Mon Apr 21 20:59:20 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","30","Policy is accepted PCF Use Case (legacy notation)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","27","Policy is accepted In force date policy","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","272","Expect the Catalog request to fail if a credential is revoked","","Mon Apr 21 20:56:59 GMT 2025","passed","Mon Apr 21 20:56:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","141","refreshEdr_whenNotAuthorized()","","Mon Apr 21 20:56:14 GMT 2025","passed","Mon Apr 21 20:56:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotAuthorized"
"","1902","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Mon Apr 21 20:59:12 GMT 2025","passed","Mon Apr 21 20:59:14 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","187","Verify HTTP 200 response and body when refreshing succeeds","","Mon Apr 21 20:56:14 GMT 2025","passed","Mon Apr 21 20:56:14 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_success"
"","4805","transferData_withSuspendResume()","","Mon Apr 21 20:55:52 GMT 2025","passed","Mon Apr 21 20:55:57 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withSuspendResume"
"","49573","transferData_privateBackend()","","Mon Apr 21 20:58:05 GMT 2025","passed","Mon Apr 21 20:58:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend"
"","1919","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Mon Apr 21 20:59:01 GMT 2025","passed","Mon Apr 21 20:59:03 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","563","refreshEdr_whenNotAuthorized()","","Mon Apr 21 20:55:47 GMT 2025","passed","Mon Apr 21 20:55:48 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotAuthorized"
"","812","The authentication token misses required claims: audience","","Mon Apr 21 20:55:30 GMT 2025","passed","Mon Apr 21 20:55:30 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAudience"
"","159","Verify the refresh endpoint is not called when token not yet expired","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","2892","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Mon Apr 21 20:59:09 GMT 2025","passed","Mon Apr 21 20:59:12 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","5265","refreshEdr()","","Mon Apr 21 20:56:03 GMT 2025","passed","Mon Apr 21 20:56:08 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr"
"","3819","transferData_privateBackend_withConsumerDataPlane()","","Mon Apr 21 20:56:55 GMT 2025","passed","Mon Apr 21 20:56:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","15708","Verify that the callbacks are invoked when negotiating an EDR","","Mon Apr 21 20:56:22 GMT 2025","passed","Mon Apr 21 20:56:37 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest$InMemory","negotiateEdr_shouldInvokeCallbacks"
"","34","Policy is accepted Usage Purpose","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","137","Expect the Catalog request to fail if a credential is expired","","Mon Apr 21 20:56:59 GMT 2025","passed","Mon Apr 21 20:56:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","37131","httpPushDataTransfer()","","Mon Apr 21 20:56:05 GMT 2025","passed","Mon Apr 21 20:56:42 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest$InMemory","httpPushDataTransfer"
"","20","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","1221","Policy is accepted MembershipCredential","","Mon Apr 21 20:55:42 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","4021","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Mon Apr 21 20:57:39 GMT 2025","passed","Mon Apr 21 20:57:43 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","2912","Contract policy is fulfilled PCF Use Case (new notation)","","Mon Apr 21 20:59:20 GMT 2025","passed","Mon Apr 21 20:59:23 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","14189","transferData_withTerminate()","","Mon Apr 21 20:55:38 GMT 2025","passed","Mon Apr 21 20:55:52 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withTerminate"
"","2103","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Mon Apr 21 20:56:59 GMT 2025","passed","Mon Apr 21 20:57:01 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","4046","transferData_privateBackend_withConsumerDataPlane()","","Mon Apr 21 20:58:55 GMT 2025","passed","Mon Apr 21 20:58:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","1928","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Mon Apr 21 20:58:59 GMT 2025","passed","Mon Apr 21 20:59:01 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","37","Policy is accepted PCF Use Case (new notation)","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","8041","transferData_withExpiredEdr_shouldReturn4xx()","","Mon Apr 21 20:57:30 GMT 2025","passed","Mon Apr 21 20:57:38 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withExpiredEdr_shouldReturn4xx"
"","19","Policy is accepted Contract reference","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","2176","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Mon Apr 21 20:55:41 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_WithNamespace_shouldReject"
"","2809","Malicious actor should not impersonate a consumer sending a valid consumer VP","","Mon Apr 21 20:55:38 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withConsumerPresentation"
"","3948","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Mon Apr 21 20:57:35 GMT 2025","passed","Mon Apr 21 20:57:39 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3018","Contract policy is fulfilled DataExchangeGovernance use case","","Mon Apr 21 20:59:23 GMT 2025","passed","Mon Apr 21 20:59:26 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3086","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Mon Apr 21 20:59:38 GMT 2025","passed","Mon Apr 21 20:59:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","232","Consumer gets catalog from the provider. No constraints.","","Mon Apr 21 20:55:43 GMT 2025","passed","Mon Apr 21 20:55:43 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","147","Verify HTTP 403 response when refreshing the token is not allowed","","Mon Apr 21 20:56:08 GMT 2025","passed","Mon Apr 21 20:56:08 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_unauthorized"
"","4","verifyAgentId_whenNoMembershipCredential(ParticipantAgentService)","","Mon Apr 21 20:57:55 GMT 2025","passed","Mon Apr 21 20:57:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyAgentId_whenNoMembershipCredential"
"","2144","Verify the refresh endpoint is not called when auto_refresh=false","","Mon Apr 21 20:55:38 GMT 2025","passed","Mon Apr 21 20:55:41 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","47","Policy is accepted DataExchangeGovernance use case","","Mon Apr 21 20:55:44 GMT 2025","passed","Mon Apr 21 20:55:44 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
