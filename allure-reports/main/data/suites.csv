"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"","29","Policy is accepted Dismantler Credential","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","5653","When multiple requests to refresh, to different edrs, verify all return non expired token","","Tue Apr 08 11:09:39 GMT 2025","passed","Tue Apr 08 11:09:45 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_subsequentRequestReturn"
"","3934","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Tue Apr 08 11:11:34 GMT 2025","passed","Tue Apr 08 11:11:38 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3034","Contract policy is fulfilled PCF Use Case (legacy notation)","","Tue Apr 08 11:13:03 GMT 2025","passed","Tue Apr 08 11:13:06 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","404","Policy is accepted MembershipCredential","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3005","Contract policy is fulfilled Dismantler allowedBrands (IN, fully contained)","","Tue Apr 08 11:13:29 GMT 2025","passed","Tue Apr 08 11:13:32 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4004","Contract policy is fulfilled Dismantler Cred (activity type)","","Tue Apr 08 11:11:18 GMT 2025","passed","Tue Apr 08 11:11:22 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","23","Policy is accepted Dismantler Credential","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","28","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","14236","transferData_withTerminate()","","Tue Apr 08 11:09:16 GMT 2025","passed","Tue Apr 08 11:09:30 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withTerminate"
"","10285","Verify the refresh endpoint is not called when auto_refresh=false","","Tue Apr 08 11:09:23 GMT 2025","passed","Tue Apr 08 11:09:33 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","21","Policy is accepted Dismantler Cred (activity type)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","27","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2062","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Tue Apr 08 11:10:53 GMT 2025","passed","Tue Apr 08 11:10:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","2431","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Tue Apr 08 11:09:32 GMT 2025","passed","Tue Apr 08 11:09:35 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_WithNamespace_shouldReject"
"","3021","Contract policy is fulfilled Dismantler Cred (activity type)","","Tue Apr 08 11:13:16 GMT 2025","passed","Tue Apr 08 11:13:19 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","1243","Policy is accepted MembershipCredential","","Tue Apr 08 11:09:18 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","917","Refresh token success","","Tue Apr 08 11:09:12 GMT 2025","passed","Tue Apr 08 11:09:13 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_success"
"","3327","Contract policy is fulfilled PCF Use Case (legacy notation)","","Tue Apr 08 11:11:02 GMT 2025","passed","Tue Apr 08 11:11:06 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","7914","transferData_withExpiredEdr_shouldReturn4xx()","","Tue Apr 08 11:11:08 GMT 2025","passed","Tue Apr 08 11:11:16 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withExpiredEdr_shouldReturn4xx"
"","151","Verify the refresh endpoint is not called when token not yet expired","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","1918","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Tue Apr 08 11:12:48 GMT 2025","passed","Tue Apr 08 11:12:49 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","870","The sign key of the authentication token is different from the public key from the DID","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_spoofedAuthToken"
"","5402","When multiple requests to refresh, to different edrs, verify all return non expired token","","Tue Apr 08 11:09:12 GMT 2025","passed","Tue Apr 08 11:09:17 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_subsequentRequestReturn"
"","832","The authentication token misses required claims: audience","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:12 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAudience"
"","4766","transferData_withSuspendResume()","","Tue Apr 08 11:09:30 GMT 2025","passed","Tue Apr 08 11:09:35 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_withSuspendResume"
"","34","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","297","Malicious actor should not impersonate a consumer by creating a VP with the consumer membership credential","","Tue Apr 08 11:09:28 GMT 2025","passed","Tue Apr 08 11:09:28 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withWrappedConsumerCredential"
"","159","refreshEdr_whenNotFound()","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotFound"
"","871","The authentication token has a invalid id","","Tue Apr 08 11:09:09 GMT 2025","passed","Tue Apr 08 11:09:10 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidTokenId"
"","24","Policy is accepted In force date policy","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3398","The authentication token misses required claims: token","","Tue Apr 08 11:09:02 GMT 2025","passed","Tue Apr 08 11:09:05 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidAuthenticationToken_missingAccessToken"
"","123","refreshEdr_whenNotFound()","","Tue Apr 08 11:09:38 GMT 2025","passed","Tue Apr 08 11:09:38 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotFound"
"","1304","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Tue Apr 08 11:12:58 GMT 2025","passed","Tue Apr 08 11:13:00 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","1910","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Tue Apr 08 11:12:46 GMT 2025","passed","Tue Apr 08 11:12:48 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","146","Verify HTTP 200 response and body when refreshing succeeds","","Tue Apr 08 11:09:45 GMT 2025","passed","Tue Apr 08 11:09:45 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_success"
"","435","refreshEdr()","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr"
"","240","Expect the Catalog request to fail if a credential is revoked","","Tue Apr 08 11:12:45 GMT 2025","passed","Tue Apr 08 11:12:46 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","164","Multiple ContractDefinitions exist for one Asset","","Tue Apr 08 11:10:10 GMT 2025","passed","Tue Apr 08 11:10:10 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_multipleOffersForAsset"
"","3907","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 08 11:10:42 GMT 2025","passed","Tue Apr 08 11:10:46 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","3026","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 08 11:13:19 GMT 2025","passed","Tue Apr 08 11:13:22 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","65429","transferData_privateBackend()","","Tue Apr 08 11:09:37 GMT 2025","passed","Tue Apr 08 11:10:42 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_privateBackend"
"","28","Policy is accepted DataExchangeGovernance use case","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","5936","transferData_privateBackend()","","Tue Apr 08 11:09:07 GMT 2025","passed","Tue Apr 08 11:09:13 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend"
"","4064","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 08 11:11:30 GMT 2025","passed","Tue Apr 08 11:11:34 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","37251","httpPushDataTransfer()","","Tue Apr 08 11:09:43 GMT 2025","passed","Tue Apr 08 11:10:20 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPushEndToEndTest$InMemory","httpPushDataTransfer"
"","30","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","1068","The Authorization header is missing","","Tue Apr 08 11:09:05 GMT 2025","passed","Tue Apr 08 11:09:06 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_missingAuthHeader"
"","137","Expect the Catalog request to fail if a credential is expired","","Tue Apr 08 11:10:47 GMT 2025","passed","Tue Apr 08 11:10:47 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","206","Verify that the consumer receives only the offers he is permitted to (using the legacy BPN validation)","","Tue Apr 08 11:10:10 GMT 2025","passed","Tue Apr 08 11:10:10 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpnLegacy_shouldReject"
"","41","Policy is accepted DataExchangeGovernance use case","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","217","Verify that the consumer receives only the offers he is permitted to (using the new BPN validation)","","Tue Apr 08 11:10:10 GMT 2025","passed","Tue Apr 08 11:10:10 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_filteredByBpn_shouldReject"
"","3485","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 08 11:09:13 GMT 2025","passed","Tue Apr 08 11:09:16 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.transfer.TransferPullEndToEndTest$InMemory","transferData_privateBackend_withConsumerDataPlane"
"","7156","Verify all existing TPs related to an agreement are terminated upon its retirement","","Tue Apr 08 11:09:34 GMT 2025","passed","Tue Apr 08 11:09:42 GMT 2025","","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest.InMemory","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest$InMemory","retireAgreement_shouldCloseTransferProcesses"
"","23","Policy is accepted Contract reference","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","3945","Contract policy is fulfilled DataExchangeGovernance use case","","Tue Apr 08 11:11:10 GMT 2025","passed","Tue Apr 08 11:11:14 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","28","Policy is accepted PCF Use Case (new notation)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","33","Policy is accepted PCF Use Case (new notation)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","34768","Catalog with 1000 offers","","Tue Apr 08 11:09:35 GMT 2025","passed","Tue Apr 08 11:10:10 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_of1000Assets_shouldContainAll"
"","18","Policy is accepted Dismantler allowedBrands (IN, fully contained)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","40642","transferData_withAutomaticRefresh()","","Tue Apr 08 11:10:27 GMT 2025","passed","Tue Apr 08 11:11:08 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","org.eclipse.tractusx.edc.tests.transfer.TransferWithTokenRefreshTest","transferData_withAutomaticRefresh"
"","49537","transferData_privateBackend()","","Tue Apr 08 11:11:52 GMT 2025","passed","Tue Apr 08 11:12:41 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend"
"","37","Policy is accepted Usage Purpose","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","24","Policy is accepted Contract reference","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2904","Contract policy is NOT fulfilled Dismantler activityType does not match","","Tue Apr 08 11:12:49 GMT 2025","passed","Tue Apr 08 11:12:52 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","19","Policy is accepted Usage Purpose","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","3992","Contract policy is fulfilled DataExchangeGovernance use case","","Tue Apr 08 11:13:09 GMT 2025","passed","Tue Apr 08 11:13:13 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","30","Policy is accepted Dismantler allowedBrands (EQ, exact match)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","3975","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Tue Apr 08 11:13:22 GMT 2025","passed","Tue Apr 08 11:13:26 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3015","Contract policy is fulfilled Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 08 11:13:26 GMT 2025","passed","Tue Apr 08 11:13:29 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","122","Expect the Catalog request to fail if a credential is expired","","Tue Apr 08 11:12:46 GMT 2025","passed","Tue Apr 08 11:12:46 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","catalogRequest_whenCredentialExpired"
"","16909","Verify that the callbacks are invoked when negotiating an EDR","","Tue Apr 08 11:09:52 GMT 2025","passed","Tue Apr 08 11:10:09 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.NegotiateEdrTest$InMemory","negotiateEdr_shouldInvokeCallbacks"
"","30","Policy is accepted PCF Use Case (legacy notation)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","3023","Contract policy is fulfilled PCF Use Case (new notation)","","Tue Apr 08 11:13:06 GMT 2025","passed","Tue Apr 08 11:13:09 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4023","Contract policy is fulfilled Dismantler Credential","","Tue Apr 08 11:11:14 GMT 2025","passed","Tue Apr 08 11:11:18 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","2847","Malicious actor should not impersonate a consumer sending a valid consumer VP","","Tue Apr 08 11:09:25 GMT 2025","passed","Tue Apr 08 11:09:28 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","org.eclipse.tractusx.edc.tests.transfer.CredentialSpoofTest","shouldNotImpersonateConsumer_withConsumerPresentation"
"","2098","Contract policy is NOT fulfilled Traceability Use Case (new notation)","","Tue Apr 08 11:10:49 GMT 2025","passed","Tue Apr 08 11:10:51 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","547","Verify HTTP 403 response when refreshing the token is not allowed","","Tue Apr 08 11:09:38 GMT 2025","passed","Tue Apr 08 11:09:39 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_unauthorized"
"","43575","shouldTerminateTransfer_whenPolicyExpires()","","Tue Apr 08 11:09:29 GMT 2025","passed","Tue Apr 08 11:10:12 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyMonitorEndToEndTest$InMemory","shouldTerminateTransfer_whenPolicyExpires"
"","22650","Consumer gets cached catalog with provider entry","","Tue Apr 08 11:10:19 GMT 2025","passed","Tue Apr 08 11:10:41 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.FederatedCatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","576","Verify HTTP 200 response and body when refreshing succeeds","","Tue Apr 08 11:09:17 GMT 2025","passed","Tue Apr 08 11:09:18 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_success"
"","43","Policy is accepted PCF Use Case (legacy notation)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","27","Policy is accepted Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","130","Verify the refresh endpoint is not called when token not yet expired","","Tue Apr 08 11:09:38 GMT 2025","passed","Tue Apr 08 11:09:38 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","getEdrWithRefresh_notExpired_shouldNotCallEndpoint"
"","2135","Contract policy is NOT fulfilled Sustainability Use Case (legacy notation)","","Tue Apr 08 11:10:47 GMT 2025","passed","Tue Apr 08 11:10:49 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","1019","The Authorization header is empty","","Tue Apr 08 11:09:06 GMT 2025","passed","Tue Apr 08 11:09:07 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_emptyAuthHeader"
"","2895","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Tue Apr 08 11:12:55 GMT 2025","passed","Tue Apr 08 11:12:58 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","4828","refreshEdr()","","Tue Apr 08 11:09:33 GMT 2025","passed","Tue Apr 08 11:09:38 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr"
"","3016","Contract policy is fulfilled Dismantler Credential","","Tue Apr 08 11:13:13 GMT 2025","passed","Tue Apr 08 11:13:16 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","1489","Contract policy is NOT fulfilled Dismantler allowedBrands (IS_NONE_OF, but is one contains)","","Tue Apr 08 11:10:55 GMT 2025","passed","Tue Apr 08 11:10:57 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","2055","Contract policy is NOT fulfilled Dismantler activityType does not match","","Tue Apr 08 11:10:51 GMT 2025","passed","Tue Apr 08 11:10:53 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","838","Refresh token is null or empty (missing) [2] ","","Tue Apr 08 11:09:08 GMT 2025","passed","Tue Apr 08 11:09:09 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","29","Policy is accepted Dismantler Cred (activity type)","","Tue Apr 08 11:09:21 GMT 2025","passed","Tue Apr 08 11:09:21 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldAcceptValidPolicyDefinitions"
"","2","verifyCorrectParticipantAgentId(ParticipantAgentService)","","Tue Apr 08 11:11:42 GMT 2025","passed","Tue Apr 08 11:11:42 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyCorrectParticipantAgentId"
"","18","Policy is accepted Dismantler allowedBrands (IS_NONE_OF, no intersect)","","Tue Apr 08 11:09:20 GMT 2025","passed","Tue Apr 08 11:09:20 GMT 2025","","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.policy.PolicyDefinitionEndToEndTest$InMemory","shouldNotAcceptInvalidValidPolicyDefinitions"
"","803","The refresh token does not match the stored one","","Tue Apr 08 11:09:10 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_withWrongRefreshToken"
"","177","Verify HTTP 403 response when refreshing the token is not allowed","","Tue Apr 08 11:09:11 GMT 2025","passed","Tue Apr 08 11:09:12 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_unauthorized"
"","6","verifyAgentId_whenNoMembershipCredential(ParticipantAgentService)","","Tue Apr 08 11:11:42 GMT 2025","passed","Tue Apr 08 11:11:42 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","org.eclipse.tractusx.edc.tests.transfer.IdentityExtractorTest","verifyAgentId_whenNoMembershipCredential"
"","268","Expect the Catalog request to fail if a credential is revoked","","Tue Apr 08 11:10:46 GMT 2025","passed","Tue Apr 08 11:10:47 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","catalogRequest_whenCredentialRevoked"
"","2063","Contract policy is NOT fulfilled Dismantler allowedBrands (IN, but not subset)","","Tue Apr 08 11:10:57 GMT 2025","passed","Tue Apr 08 11:10:59 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","906","Refresh token is null or empty (missing) [1] null","","Tue Apr 08 11:09:07 GMT 2025","passed","Tue Apr 08 11:09:08 GMT 2025","","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","org.eclipse.tractusx.edc.dataplane.tokenrefresh.e2e.DataPlaneTokenRefreshEndToEndTest","refresh_invalidRefreshToken"
"","138","refreshEdr_whenNotAuthorized()","","Tue Apr 08 11:09:45 GMT 2025","passed","Tue Apr 08 11:09:45 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.InMemory","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$InMemory","refreshEdr_whenNotAuthorized"
"","1615","retireAgreement_shouldFail_whenAgreementDoesNotExist()","","Tue Apr 08 11:09:33 GMT 2025","passed","Tue Apr 08 11:09:34 GMT 2025","","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest.InMemory","org.eclipse.tractusx.edc.tests.agreement.retirement.RetireAgreementTest$InMemory","retireAgreement_shouldFail_whenAgreementDoesNotExist"
"","234","Consumer gets catalog from the provider. No constraints.","","Tue Apr 08 11:09:35 GMT 2025","passed","Tue Apr 08 11:09:35 GMT 2025","","org.eclipse.tractusx.edc.tests.catalog.CatalogTest.InMemory","org.eclipse.tractusx.edc.tests.catalog.CatalogTest$InMemory","requestCatalog_fulfillsPolicy_shouldReturnOffer"
"","3986","Contract policy is fulfilled Dismantler allowedBrands (IS_ANY_OF, one intersects)","","Tue Apr 08 11:11:22 GMT 2025","passed","Tue Apr 08 11:11:26 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","3977","Contract policy is fulfilled Dismantler allowedBrands (EQ, exact match)","","Tue Apr 08 11:11:26 GMT 2025","passed","Tue Apr 08 11:11:30 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","556","refreshEdr_whenNotAuthorized()","","Tue Apr 08 11:09:18 GMT 2025","passed","Tue Apr 08 11:09:18 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","refreshEdr_whenNotAuthorized"
"","1729","Verify the refresh endpoint is not called when auto_refresh=false","","Tue Apr 08 11:09:09 GMT 2025","passed","Tue Apr 08 11:09:11 GMT 2025","","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest.Postgres","org.eclipse.tractusx.edc.tests.edrv2.EdrCacheApiEndToEndTest$Postgres","getEdrWithRefresh_whenNotAutorefresh_shouldNotCallEndpoint"
"","4014","transferData_privateBackend_withConsumerDataPlane()","","Tue Apr 08 11:12:41 GMT 2025","passed","Tue Apr 08 11:12:45 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_privateBackend_withConsumerDataPlane"
"","3682","Contract policy is fulfilled MembershipCredential","","Tue Apr 08 11:13:00 GMT 2025","passed","Tue Apr 08 11:13:03 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","2924","Contract policy is NOT fulfilled Dismantler allowedBrands (NEQ, but is equal)","","Tue Apr 08 11:12:52 GMT 2025","passed","Tue Apr 08 11:12:55 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.StsHttpConsumerPullTest","transferData_whenContractPolicyNotFulfilled"
"","3513","Contract policy is fulfilled MembershipCredential","","Tue Apr 08 11:10:59 GMT 2025","passed","Tue Apr 08 11:11:02 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
"","4074","Contract policy is fulfilled PCF Use Case (new notation)","","Tue Apr 08 11:11:06 GMT 2025","passed","Tue Apr 08 11:11:10 GMT 2025","","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","org.eclipse.tractusx.edc.tests.transfer.DimHttpConsumerPullTest","transferData_whenContractPolicyFulfilled"
